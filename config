#!/usr/bin/bash

# default --krn-vendor
KRN_VENDOR=${KRN_VENDOR:=fedora}
# default --krn-arch
KRN_ARCH=${KRN_ARCH:=x86_64}

# additional list of commits to cherry-pick before building
if [ -n "${PARAMS}" ]; then
  ZFS_GIT_CHERRY_PICK_COMMITS="${PARAMS}"
fi
# Default Git URL for OpenZFS code checkout
ZFS_GITHUB_REPO=${ZFS_GITHUB_REPO:=https://github.com/openzfs/zfs.git}
# 1 = set license to GPL v2
ENABLE_LICENSE_PATCH=${ENABLE_LICENSE_PATCH:=0}
# 1 = drop BuildRequires line from RPM SPEC in case kernel-devel package has different name
ENABLE_SPEC_PATCH=${ENABLE_SPEC_PATCH:=0}
# docker/podman base image
BASE_IMAGE_NAME=${BASE_IMAGE_NAME:=fedora:${OS_VERSION_MAJOR}}
# podman/docker built image
IMAGE_NAME=${IMAGE_NAME:=zefosator-image-fedora${OS_VERSION_MAJOR}}
# default kernel package base name
KERNEL_PKG_BASE_NAME=${KERNEL_PKG_BASE_NAME:=kernel}
# Standard RPM packages to install when building podman/docker image
STANDARD_PACKAGES="gcc make autoconf automake libtool rpm-build kernel-rpm-macros "
STANDARD_PACKAGES+="libblkid-devel libuuid-devel libudev-devel openssl-devel zlib-devel libaio-devel "
STANDARD_PACKAGES+="python3 python3-devel python3-setuptools python3-cffi python3-packaging "
STANDARD_PACKAGES+="libattr-devel elfutils-libelf-devel libffi-devel createrepo bison flex "
STANDARD_PACKAGES+="git-core "
# Extra RPM packages to install after standard packages are installed
EXTRA_PACKAGES=""

if [ "$KRN_VENDOR" = "fedora" ]; then
  # Build OpenZFS kmod for standard Fedora kernel  
  STANDARD_PACKAGES+="dkms libtirpc-devel rpmrebuild ncompress "
  KERNEL_PKG_BASE_NAME=kernel
  KERNEL_URL_DIR=https://kojipkgs.fedoraproject.org/packages/kernel/${KRN_VERSION}/${KRN_RELEASE}.fc${OS_VERSION_MAJOR}/${KRN_ARCH}
  KERNEL_META_PKG=${KERNEL_URL_DIR}/${KERNEL_PKG_BASE_NAME}-${KRN_VERSION}-${KRN_RELEASE}.fc${OS_VERSION_MAJOR}.${KRN_ARCH}.rpm
  KERNEL_DEVEL_PKG=${KERNEL_URL_DIR}/${KERNEL_PKG_BASE_NAME}-devel-${KRN_VERSION}-${KRN_RELEASE}.fc${OS_VERSION_MAJOR}.${KRN_ARCH}.rpm
  KERNEL_PACKAGES=( \
    "${KERNEL_META_PKG}" \
    "${KERNEL_DEVEL_PKG}" \
    "${KERNEL_URL_DIR}/${KERNEL_PKG_BASE_NAME}-core-${KRN_VERSION}-${KRN_RELEASE}.fc${OS_VERSION_MAJOR}.${KRN_ARCH}.rpm" \
    "${KERNEL_URL_DIR}/${KERNEL_PKG_BASE_NAME}-devel-matched-${KRN_VERSION}-${KRN_RELEASE}.fc${OS_VERSION_MAJOR}.${KRN_ARCH}.rpm" \
    "${KERNEL_URL_DIR}/${KERNEL_PKG_BASE_NAME}-modules-${KRN_VERSION}-${KRN_RELEASE}.fc${OS_VERSION_MAJOR}.${KRN_ARCH}.rpm" \
    "${KERNEL_URL_DIR}/${KERNEL_PKG_BASE_NAME}-modules-core-${KRN_VERSION}-${KRN_RELEASE}.fc${OS_VERSION_MAJOR}.${KRN_ARCH}.rpm" \
    "${KERNEL_URL_DIR}/${KERNEL_PKG_BASE_NAME}-modules-extra-${KRN_VERSION}-${KRN_RELEASE}.fc${OS_VERSION_MAJOR}.${KRN_ARCH}.rpm" \
    "${KERNEL_URL_DIR}/${KERNEL_PKG_BASE_NAME}-modules-internal-${KRN_VERSION}-${KRN_RELEASE}.fc${OS_VERSION_MAJOR}.${KRN_ARCH}.rpm" \
  )
elif [ "$KRN_VENDOR" = "kwizart" ]; then
  # Build OpenZFS kmod for Kwizart LTS Fedora kernel
  STANDARD_PACKAGES+="dkms libtirpc-devel rpmrebuild ncompress "
  ENABLE_SPEC_PATCH=1
  KERNEL_PKG_BASE_NAME=kernel-longterm
  # This is required part of URL to download kwizart kernel packages
  ${KWIZART_BUILD_ID:=undefined}
  KERNEL_URL_DIR=https://download.copr.fedorainfracloud.org/results/kwizart/${KERNEL_PKG_BASE_NAME}-${KRN_VERSION}/fedora-${OS_VERSION_MAJOR}-${KRN_ARCH}/${KWIZART_BUILD_ID}-${KERNEL_PKG_BASE_NAME}
  KERNEL_META_PKG=${KERNEL_URL_DIR}/${KERNEL_PKG_BASE_NAME}-${KRN_VERSION}-${KRN_RELEASE}.fc${OS_VERSION_MAJOR}.${KRN_ARCH}.rpm
  KERNEL_DEVEL_PKG=${KERNEL_URL_DIR}/${KERNEL_PKG_BASE_NAME}-devel-${KRN_VERSION}-${KRN_RELEASE}.fc${OS_VERSION_MAJOR}.${KRN_ARCH}.rpm
  KERNEL_PACKAGES=( \
    "${KERNEL_META_PKG}" \
    "${KERNEL_DEVEL_PKG}" \
    "${KERNEL_URL_DIR}/${KERNEL_PKG_BASE_NAME}-core-${KRN_VERSION}-${KRN_RELEASE}.fc${OS_VERSION_MAJOR}.${KRN_ARCH}.rpm" \
    "${KERNEL_URL_DIR}/${KERNEL_PKG_BASE_NAME}-devel-matched-${KRN_VERSION}-${KRN_RELEASE}.fc${OS_VERSION_MAJOR}.${KRN_ARCH}.rpm" \
    "${KERNEL_URL_DIR}/${KERNEL_PKG_BASE_NAME}-modules-${KRN_VERSION}-${KRN_RELEASE}.fc${OS_VERSION_MAJOR}.${KRN_ARCH}.rpm" \
    "${KERNEL_URL_DIR}/${KERNEL_PKG_BASE_NAME}-modules-extra-${KRN_VERSION}-${KRN_RELEASE}.fc${OS_VERSION_MAJOR}.${KRN_ARCH}.rpm" \
    "${KERNEL_URL_DIR}/${KERNEL_PKG_BASE_NAME}-modules-internal-${KRN_VERSION}-${KRN_RELEASE}.fc${OS_VERSION_MAJOR}.${KRN_ARCH}.rpm" \
  )
elif [ "$KRN_VENDOR" = "almalinux" ]; then
  # Build OpenZFS kmod for standard AlmaLinux kernel
  BASE_IMAGE_NAME=almalinux/${OS_VERSION_MAJOR}-base
  IMAGE_NAME=zefosator-image-alma${OS_VERSION_MAJOR}
  STANDARD_PACKAGES+="epel-release "
  EXTRA_PACKAGES+="dkms libtirpc-devel rpmrebuild ncompress "
  #               https://repo.almalinux.org/almalinux/9.3/BaseOS/x86_64/os/Packages/kernel-5.14.0-362.13.1.el9_3.x86_64.rpm
  KERNEL_META_PKG=https://repo.almalinux.org/almalinux/${OS_VERSION_MAJOR}/BaseOS/${KRN_ARCH}/os/Packages/${KERNEL_PKG_BASE_NAME}-${KRN_VERSION}-${KRN_RELEASE}.el${OS_VERSION_MAJOR}_${OS_VERSION_MINOR}.${KRN_ARCH}.rpm
  #              https://repo.almalinux.org/almalinux/9.3/BaseOS/x86_64/os/Packages/kernel-abi-stablelists-5.14.0-362.13.1.el9_3.noarch.rpm
  KERNEL_ABI_PKG=https://repo.almalinux.org/almalinux/${OS_VERSION_MAJOR}/BaseOS/${KRN_ARCH}/os/Packages/${KERNEL_PKG_BASE_NAME}-abi-stablelists-${KRN_VERSION}-${KRN_RELEASE}.el${OS_VERSION_MAJOR}_${OS_VERSION_MINOR}.noarch.rpm
  #                https://repo.almalinux.org/almalinux/9.3/AppStream/x86_64/os/Packages/kernel-devel-5.14.0-362.13.1.el9_3.x86_64.rpm
  KERNEL_DEVEL_PKG=https://repo.almalinux.org/almalinux/${OS_VERSION_MAJOR}/AppStream/${KRN_ARCH}/os/Packages/${KERNEL_PKG_BASE_NAME}-devel-${KRN_VERSION}-${KRN_RELEASE}.el${OS_VERSION_MAJOR}_${OS_VERSION_MINOR}.${KRN_ARCH}.rpm
  KERNEL_PACKAGES=( \
    "${KERNEL_META_PKG}" \
    "${KERNEL_ABI_PKG}" \
    "${KERNEL_DEVEL_PKG}" \
    "https://repo.almalinux.org/almalinux/${OS_VERSION_MAJOR}/AppStream/${KRN_ARCH}/os/Packages/${KERNEL_PKG_BASE_NAME}-devel-matched-${KRN_VERSION}-${KRN_RELEASE}.el${OS_VERSION_MAJOR}_${OS_VERSION_MINOR}.${KRN_ARCH}.rpm" \
    "https://repo.almalinux.org/almalinux/${OS_VERSION_MAJOR}/AppStream/${KRN_ARCH}/os/Packages/${KERNEL_PKG_BASE_NAME}-headers-${KRN_VERSION}-${KRN_RELEASE}.el${OS_VERSION_MAJOR}_${OS_VERSION_MINOR}.${KRN_ARCH}.rpm" \
    "https://repo.almalinux.org/almalinux/${OS_VERSION_MAJOR}/BaseOS/${KRN_ARCH}/os/Packages/${KERNEL_PKG_BASE_NAME}-core-${KRN_VERSION}-${KRN_RELEASE}.el${OS_VERSION_MAJOR}_${OS_VERSION_MINOR}.${KRN_ARCH}.rpm" \
    "https://repo.almalinux.org/almalinux/${OS_VERSION_MAJOR}/BaseOS/${KRN_ARCH}/os/Packages/${KERNEL_PKG_BASE_NAME}-modules-${KRN_VERSION}-${KRN_RELEASE}.el${OS_VERSION_MAJOR}_${OS_VERSION_MINOR}.${KRN_ARCH}.rpm" \
    "https://repo.almalinux.org/almalinux/${OS_VERSION_MAJOR}/BaseOS/${KRN_ARCH}/os/Packages/${KERNEL_PKG_BASE_NAME}-modules-core-${KRN_VERSION}-${KRN_RELEASE}.el${OS_VERSION_MAJOR}_${OS_VERSION_MINOR}.${KRN_ARCH}.rpm" \
    "https://repo.almalinux.org/almalinux/${OS_VERSION_MAJOR}/BaseOS/${KRN_ARCH}/os/Packages/${KERNEL_PKG_BASE_NAME}-modules-extra-${KRN_VERSION}-${KRN_RELEASE}.el${OS_VERSION_MAJOR}_${OS_VERSION_MINOR}.${KRN_ARCH}.rpm" \
  )
fi
